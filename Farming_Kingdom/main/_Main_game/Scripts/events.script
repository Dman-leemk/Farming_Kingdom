function init(self)
	msg.post("main_game:/GUI", "update_event", {event = event_storage[day_count], next_event = event_storage[day_count + 1],effect_display = evt_effect})
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update_day") then
		-- Resets previous modifers --
		evt_harvesting_mod = 1
		evt_cost_mod       = 1
		evt_increase_mod   = 1
		msg.post("main_game:/GUI_selection_boxes", "update_cash", 
		{crop_info = crop_states["unlock_cost"], food_info = food_states["unlock_cost"], bank = bank, cost_mod = evt_cost_mod})
		
		day = message.day_count
		current_event = event_storage[day]
		if     1  == current_event then
			-- Drought event -------------------------------------------------------------------------------
			evt_harvesting_mod = 0.5
			evt_effect = "0.5x Progress per Click"
			------------------------------------------------------------------------------------------------
		elseif 2  == current_event then
			-- Rainy season event --------------------------------------------------------------------------
			evt_harvesting_mod = 2
			evt_effect = "2x Progress per Click"
			------------------------------------------------------------------------------------------------
		elseif 3  == current_event then
			-- Black friday event --------------------------------------------------------------------------
			evt_cost_mod = 0.5
			evt_effect = "-50% to costs"
			msg.post("main_game:/GUI_selection_boxes", "update_cash", 
			{crop_info = crop_states["unlock_cost"], food_info = food_states["unlock_cost"], bank = bank, cost_mod = evt_cost_mod})
			------------------------------------------------------------------------------------------------
		elseif 4  == current_event then
			-- Inflation event -----------------------------------------------------------------------------
			evt_cost_mod = 2
			evt_effect = "+100% to costs"
			msg.post("main_game:/GUI_selection_boxes", "update_cash", 
			{crop_info = crop_states["unlock_cost"], food_info = food_states["unlock_cost"], bank = bank, cost_mod = evt_cost_mod})
			------------------------------------------------------------------------------------------------
		elseif 5  == current_event then
			-- Inheritance event ---------------------------------------------------------------------------
			local inherited_amt = 100
			bank = bank + inherited_amt
			evt_effect = "+ $100"
			msg.post("main_game:/GUI", "update_bank", {bank = bank})
			msg.post("main_game:/GUI_selection_boxes", "update_cash", 
			{crop_info = crop_states["unlock_cost"], food_info = food_states["unlock_cost"], bank = bank, cost_mod = evt_cost_mod})
			------------------------------------------------------------------------------------------------
		elseif 6  == current_event then
			-- Tax man event -------------------------------------------------------------------------------
			bank_before = bank
			bank = bank_before * tax_percent
			bank_change = bank_before - bank
			evt_effect = "- " .. "$" .. bank_change
			msg.post("main_game:/GUI", "update_bank", {bank = bank})
			msg.post("main_game:/GUI_selection_boxes", "update_cash", 
			{crop_info = crop_states["unlock_cost"], food_info = food_states["unlock_cost"], bank = bank, cost_mod = evt_cost_mod})
			------------------------------------------------------------------------------------------------
		elseif 7 == current_event then
			-- Spoiled food event --------------------------------------------------------------------------
			local unlocked_foods = {}
			-- Iterates through every food --
			for x = 1, 12 do
				-- Checks if the current food has been bought --
				if food_states["bought"][x] == true then
					-- Stores the food in another table --
					table.insert(unlocked_foods, x)
				end
			end
			-- Picks a random unlocked food --
			local chosen_food = unlocked_foods[math.random(1,table.maxn(unlocked_foods))]
			local rotten_percent = 0.7 -- Stores the effect on the food storage
			food_before = food_info["number"][chosen_food]
			-- Reduces the randomly selected food by the reduction percentage --
			food_info["number"][chosen_food] = math.floor(food_before * rotten_percent) 
			food_change = food_before - food_info["number"][chosen_food]
			local food_names = {"Bread","Beer","Sliced Carrots","Carrot Bread","Cake","Carrot Cake","Stawberry Jam","Stawberry Cake","Grape Jam",
			"Smoothie", "Chocolate","Chocolate Cake"}
			evt_effect = "-" .. food_change .. " " .. food_names[chosen_food]
			msg.post("main_game:/GUI", "update_food", {food = food_info["number"][current_food], storage = max_storage})
			------------------------------------------------------------------------------------------------
		elseif 8 == current_event then
			-- Free samples event --------------------------------------------------------------------------
			local free_addition = 5
			-- Picks a random number to determine if a crop of food is to be added --
			-- 1 is a food, 2 is a crop --
			if 1 == math.random(1, 2) then
				-- Picks a random food --
				chosen_food = math.random(1, 12)
				-- Increases the stored number by the addition amount --
				food_info["number"][chosen_food] = food_info["number"][chosen_food] + free_addition
				local food_names = {"Bread","Beer","Sliced Carrots","Carrot Bread","Cake","Carrot Cake","Stawberry Jam","Stawberry Cake","Grape Jam",
				"Smoothie", "Chocolate","Chocolate Cake"}
				evt_effect = "+5 " .. food_names[chosen_food]
				msg.post("main_game:/GUI", "update_food", {food = food_info["number"][current_food], storage = max_storage})
			-- Must be 2 --
			else
				-- Picks a random crop --
				chosen_crop = math.random(1, 6)
				-- Increases the stored number by the addition amount --
				crop_info["number"][chosen_crop] = crop_info["number"][chosen_crop] + free_addition
				local crop_names = {"Wheat", "Carrot", "Sugar", "Stawberry", "Grape", "Cacao"}
				evt_effect = "+5 " .. crop_names[chosen_crop]
				msg.post("main_game:/GUI", "update_crop", {crops = crop_info["number"][current_crop], storage = max_storage})
			end 
			------------------------------------------------------------------------------------------------
		elseif 9  == current_event then
			-- Bad harvest event ---------------------------------------------------------------------------
			evt_increase_mod = 0.5
			evt_effect = "0.5x Crop per Harvest"
			------------------------------------------------------------------------------------------------
		elseif 10 == current_event then
			-- Plentiful harvest event ---------------------------------------------------------------------
			evt_increase_mod = 2
			evt_effect = "2x Crop per Harvest"
			------------------------------------------------------------------------------------------------
		end
		msg.post("main_game:/GUI", "update_event", {event = current_event, next_event = event_storage[day + 1],effect_display = evt_effect})
	end
end
