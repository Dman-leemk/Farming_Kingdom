
local max_upgrades  = 6
local base_increase = 1.75 

function on_message(self, message_id, message, sender)
	if message_id == hash("Upgrade_click") then
		-- Stores the passed information into local variables --
		local current_upg = message.upgrade_type
		-- Stores the number of the clicked upgrade --
		local current_upg_num = upgrades_table["Number_of_upgrades"][current_upg]
		
		-- Ends the function if the max upgrades are reached -- 
		if current_upg_num == max_upgrades then
			return
		end
		-- Calculates the cost of the upgrade --
		local cost = math.ceil(upgrades_table["Base_cost"][current_upg] * (base_increase ^ (current_upg_num - 1)))
		-- Checks if the user can afford the upgrade --
		if cost <= bank then
			-- Takes away the cost from the bank --
			bank = bank - cost
			-- Increments the stored number of upgrades --
			upgrades_table["Number_of_upgrades"][current_upg] = current_upg_num + 1
		end
	end
end

local function apply_upg_eff (current_upg, upgrade_number)
	-- Finds the corresponding click --
	if     current_upg == 1 then
		-- Tax evasion -- 
		
	elseif current_upg == 2 then
		-- Farm automation --
		upg_auto_farm = upgrade_number * 5
		
	elseif current_upg == 3 then
		-- Storage --
		upg_storage = upgrade_number * 10
		
	elseif current_upg == 4 then
		-- Auto cooking --
		upg_auto_cook = upgrade_number * 5
		
	elseif current_upg == 5 then
		-- Larger fields --

	elseif current_upg == 6 then
		-- Better fertilizer --

	end
end

-- Max upgrades
-- Cost per upgrade
-- 